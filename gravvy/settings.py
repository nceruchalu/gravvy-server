"""
Django settings for gravvy project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import os
import socket
import logging
from datetime import datetime, timedelta
from boto.s3.connection import OrdinaryCallingFormat

# import sensitive information and be sure to have SECRET_KEY setup
from settings_secret import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG mode defined in settings_secret.py


ADMINS = (
    ('Noddy', 'nceruchalu@gmail.com'),
    )
MANAGERS = ADMINS

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.7/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ['www.gravvy.nnoduka.com', 'gravvy.nnoduka.com',
                 'nceruchalu.webfactional.com']


# ---------------------------------------------------------------------------- #
# Application definition
# ---------------------------------------------------------------------------- #

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'debug_toolbar',
    'imagekit',
    'storages',
    'rest_framework',
    'push_notifications',
    'gravvy.apps.account',
    'gravvy.apps.feedback',
    'gravvy.apps.video',
    'gravvy.apps.activity',
    'gravvy.apps.push',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'gravvy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(os.path.dirname(__file__), 'templates'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug':DEBUG,
        },
    },
]

WSGI_APPLICATION = 'gravvy.wsgi.application'


# ---------------------------------------------------------------------------- #
# Database
# ---------------------------------------------------------------------------- #
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DATABASES_PSQL_NAME,
        'USER': DATABASES_PSQL_USER,
        'PASSWORD': DATABASES_PSQL_PASSWORD,
        'HOST': '',
        'PORT': '',
    }
}


# ---------------------------------------------------------------------------- #
# Internationalization
# ---------------------------------------------------------------------------- #
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'UTC'

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = True


# ---------------------------------------------------------------------------- #
# Static files (CSS, JavaScript, Images)
# ---------------------------------------------------------------------------- #
# https://docs.djangoproject.com/en/1.8/howto/static-files/

# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
if DEBUG == True:
    STATIC_URL = '/static/'
else:
    STATIC_URL = AWS_STATIC_BUCKET_URL

# Additional locations of static files
STATICFILES_DIRS = (
    os.path.join(os.path.dirname(__file__), 'static').replace('\\','/'),
    )


# ---------------------------------------------------------------------------- #
# Logging
# ---------------------------------------------------------------------------- #
# https://docs.djangoproject.com/en/1.8/topics/logging/

# This logging configuration does the following:
# - identifies the configuration as being in `dictConfig version 1` format. 
# - defines 2 formatters: simple and verbose
# - defines 2 handlers:
#   + console, a StreamHandler, which will print any DEBUG (or higher) message
#     to stderr. This handler uses the simple output format.
#   + mail_admins, an AdminEmailHandler, which will email any ERROR (or higher)
#     message to the site admins
# - configures 1 logger:
#   + django, which passes all messages at ERROR or higher to the mail_admins
#     handlers when not in DEBUG mode. In debug mode this logger passes messages
#     to the console handler.
#

LOGGING = {
    'version': 1,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
            },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True
            }
        },
    'loggers': {
        'django': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
            },
        }
    }

if DEBUG:
    # make all loggers use the console.
    for logger in LOGGING['loggers']:
        LOGGING['loggers'][logger]['handlers'] = ['console']


# ---------------------------------------------------------------------------- #
# Email settings
# ---------------------------------------------------------------------------- #
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# rest of the settings are in settings_secret.py


# ---------------------------------------------------------------------------- #
# Amazon AWS storage settings
# ---------------------------------------------------------------------------- #
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'

# Workaround to issues in AWS that lead to errors like:
#     CertificateError: hostname 'media.gravvy.com.s3.amazonaws.com' 
#     doesn't match either of '*.s3.amazonaws.com', 's3.amazonaws.com'
# ref: https://github.com/boto/boto/issues/2836
AWS_S3_CALLING_FORMAT = OrdinaryCallingFormat()

AWS_S3_USE_SSL = not DEBUG

# Specify AWS S3 bucket to upload files to
if DEBUG == True:
    AWS_STORAGE_BUCKET_NAME = AWS_TEST_MEDIA_BUCKET_NAME
else:
    AWS_STORAGE_BUCKET_NAME = AWS_MEDIA_BUCKET_NAME

AWS_REDUCED_REDUNDANCY = True

# Cache ref: http://www.mobify.com/blog/beginners-guide-to-http-cache-headers/
expires = datetime.now() + timedelta(days=365)
AWS_HEADERS = {
    'Expires':expires.strftime('%a, %d %b %Y 20:00:00 GMT'),
    'Cache-Control': 'public, max-age=31536000, s-maxage=31536000',
}

# Read files from AWS cloudfront (requires using s3boto storage backend)
if DEBUG == True:
    AWS_S3_CUSTOM_DOMAIN = AWS_TEST_MEDIA_CLOUDFRONT_URL
else:
    AWS_S3_CUSTOM_DOMAIN = AWS_MEDIA_CLOUDFRONT_URL


# ---------------------------------------------------------------------------- #
# `imagekit` settings
# ---------------------------------------------------------------------------- #
# create appropriate thumbnails on source file save only and not during 
# request-response cycle as with the 'JustInTime' strategy
IMAGEKIT_DEFAULT_CACHEFILE_STRATEGY ='imagekit.cachefiles.strategies.Optimistic'

# The easiest and most significant improvement that can be made to site
# performance is to ahve ImageKit cache the state of generated files.
IMAGEKIT_CACHE_BACKEND = 'default'

IMAGEKIT_CACHEFILE_DIR = 'cache'
IMAGEKIT_SPEC_CACHEFILE_NAMER ='imagekit.cachefiles.namers.source_name_as_path'


# ---------------------------------------------------------------------------- #
# Project-level settings
# ---------------------------------------------------------------------------- #
# max image file size: 25MB
MAX_IMAGE_SIZE = 25 * 1024 * 1024


# ---------------------------------------------------------------------------- #
# `account` settings
# ---------------------------------------------------------------------------- #
# specify custom user model
AUTH_USER_MODEL = 'account.User'

# A boolean indicating whether to auto-activate accounts or not
# Accounts that are not automatically activated will be sent an SMS message
# with a verification code. Successful entry of that verification code is
# necessary for marking an account as active.
ACCOUNT_AUTO_ACTIVATE = False

# The number of days users will have to activate their accounts after 
# registering. Failing to activate during that period will leave the account
# inactive. This must be an integer.
ACCOUNT_ACTIVATION_DAYS = 7

# number of integer digits for the verification code
ACCOUNT_VERIFICATION_CODE_LEN = 4

# width and height value of user avatar thumbnail (account for @3x resolution)
# Want to support avatars of 40pts*40pts
AVATAR_THUMBNAIL_SIZE = 120

# max number of users to return in a user's recent contacts list
ACCOUNT_MAX_RECENT_CONTACTS = 8


# ---------------------------------------------------------------------------- #
# `feedback` settings
# ---------------------------------------------------------------------------- #
# Feedback contact email address
FEEDBACK_CONTACT_EMAIL = 'support@gravvy.nnoduka.com'


# ---------------------------------------------------------------------------- #
# `video` settings
# ---------------------------------------------------------------------------- #
# width and height value of video clip photo (account for @3x resolution)
# Note that this can't be larger than the resolution of the videos, 480px*480px
VIDEO_PHOTO_THUMBNAIL_SIZE = 480

# width and height of video activity feed photo (account for @3x resolution)
# Want to support 44pts*44pts
VIDEO_PHOTO_ACTIVITY_THUMBNAIL_SIZE = 132

# max video clip file size: 25MB
MAX_VIDEO_CLIP_SIZE = 25 * 1024 * 1024

# valid Video clip file formats
VIDEO_CLIP_FORMATS = ['video/mp4']

# default domain of HTTP Server
if DEBUG:
    HTTP_DOMAIN = 'http://10.0.0.4:8000'
else:
    HTTP_DOMAIN = 'http://gravvy.nnoduka.com'

# gravity value to use when determining video score
VIDEO_SCORE_GRAVITY = 1.8

# weight of plays count when determining video score
VIDEO_PLAYS_COUNT_WEIGHT = 1.0

# weight of likes count when determining video score
VIDEO_LIKES_COUNT_WEIGHT = 10.0

# ---------------------------------------------------------------------------- #
# `push` settings
# ---------------------------------------------------------------------------- #
# video hash key in the extra data sent in a push notification.
PUSH_VIDEO_HASH_KEY_KEY = 'video_hash_key'

# video action performer is a user so this user's phone number and
# full name is sent in the the push notification as well
PUSH_VIDEO_USER_PHONE_NUMBER_KEY = 'user_phone_number'
PUSH_VIDEO_USER_FULL_NAME_KEY = 'user_full_name'

# video action needs a custom message that's slightly different from the
# aps alert message. So this is included as well
PUSH_VIDEO_MESSAGE_KEY = 'video_message'

# push notification type which tells the native application what exactly
# the push notification is about. The corresponding value is documented under
# PUSH_ACTION_* constants
PUSH_ACTION_TYPE_KEY = 'action_type'

# a push notification action could be on a video's user, clip.
# The exact object depends on the action type, and its identifier would be the
# corresponding primary key.
#     user: phone_number
#     clip: id
PUSH_ACTION_OBJECT_IDENTIFIER_KEY = 'object_identifier'

# default push notification sound file
PUSH_SOUND_FILE = 'notification.caf'

# PUSH Action types
PUSH_ACTION_TYPE_DEFAULT = 0            # default value with no special handling

PUSH_ACTION_TYPE_INVITED_USER_TO_VIDEO = 10 # user is invited to video
PUSH_ACTION_TYPE_ADDED_USER   = 11          # added another user to video
PUSH_ACTION_TYPE_REMOVED_USER = 12          # removed user from video

PUSH_ACTION_TYPE_LIKED = 20                 # user has liked video

PUSH_ACTION_TYPE_ADDED_CLIP = 30            # added new clip to video
PUSH_ACTION_TYPE_DELETED_CLIP = 31          # deleted clip from video


# ---------------------------------------------------------------------------- #
# Django REST framework settings
# ---------------------------------------------------------------------------- #
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        ),
    
    # Default to JSON only
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        ),
    
    # Use an expiring token authentication scheme but enable session
    # authentication for use by the Browseable API.
    'DEFAULT_AUTHENTICATION_CLASSES':(
        'gravvy.apps.account.authentication.ExpiringTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        ),
    
    # Allow authenticated users to perform any request,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        ),
            
    # Pagination
    'PAGE_SIZE': 1000,
    
    # View configuration
    # Need to customize the get_view_description method to ensure it enables all
    # the necessary python-markdown extensions.
    'VIEW_DESCRIPTION_FUNCTION': 'gravvy.apps.rest.views.get_view_description',
    
    # Specify the datetime format as opposed to relying on the default
    # ISO_8601, to ensure the microseconds are always included in the string
    # value of datetime values. With the default settings, this isn't the case
    # if the microseconds value is 0.
    'DATETIME_FORMAT': '%Y-%m-%dT%H:%M:%S.%fZ',
}

# Uncomment to enable Browseable API in DEBUG mode only
#if DEBUG:
#    REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'] += [
#        'rest_framework.renderers.BrowsableAPIRenderer'
#        ]


# ---------------------------------------------------------------------------- #
# Django Push Notifications settings
# ---------------------------------------------------------------------------- #
# The debug settings for the Push Notifications app depends on if the app is
# submitted to the app store or not.
PUSH_DEBUG = DEBUG

PUSH_NOTIFICATIONS_SETTINGS = {
    'APNS_CERTIFICATE': os.path.abspath(
        os.path.join(os.path.dirname(__file__), 
                     '../apns/aps_development.pem' if PUSH_DEBUG else 
                     '../apns/aps_production.pem')), 

    'APNS_HOST': 'gateway.sandbox.push.apple.com' if PUSH_DEBUG else \
        'gateway.push.apple.com',
    
    'APNS_FEEDBACK_HOST': 'feedback.sandbox.push.apple.com' if PUSH_DEBUG else \
        'feedback.push.apple.com',
}


# ---------------------------------------------------------------------------- #
# Plivo settings
# ---------------------------------------------------------------------------- #
# Enter your Plivo phone number. This will show up on your caller ID
PLIVO_NUMBER = '18583650635'
